@using ControlUniversitario.Models

@model CarreraModelo

@{
    ViewBag.Title = "Página Inicio";
}

<div class="row">

    <div class="col-6 offset-3">
        <h5>Seleccione  una carrera</h5>
        @using (Html.BeginForm("Cursos", "Carreras", new { }, FormMethod.Get, new { @name = "formularioCarrera" }))
        {
            @Html.DropDownList("CarreraSeleccionada", Model.Carreras, new { @class = "form-select" });

        }
    </div>


    <div class="col-6 offset-3 pt-5">
        <h5>Cursos de la carrera</h5>
        <div class="row d-md-flex justify-content-md-end pb-3">
            @if (TempData["MensajeError"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["MensajeError"]
                </div>
            }

            @if (TempData["MensajeExitoCursoEliminado"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @TempData["MensajeExitoCursoEliminado"]
                </div>
            }
            @if (TempData["MensajeExitoCursoAgregado"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @TempData["MensajeExitoCursoAgregado"]
                </div>
            }

            @if (Model.CarreraSeleccionada != null)
            {
                <a href="#" class="col-md-3 col-12 btn btn-primary" data-bs-toggle="modal" data-bs-target="#agregarCurso">+ Añadir curso</a>
            }
        </div>
        <table class="table table-hover">
            <thead class="table-primary">
                <tr>
                    <th scope="col">Nombre del curso</th>
                    <th scope="col">Descripción</th>
                    <th class="text-end" scope="col">Opciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Cursos == null || Model.Cursos.Count == 0)
                {
                    <tr>
                        <td class="text-center" colspan="4">
                            No hay cursos asociados
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var curso in Model.Cursos)
                    {
                        <tr>
                            <td>@curso.NombreDelCurso</td>
                            <td>@curso.Descripcion</td>
                            <td class="text-end">
                                <a href="#" class="btn btn-sm btn-danger ms-1"
                                   dialogo-titulo="Remover cursos de la carrera de @Model.NombreCarreraSeleccionada"
                                   dialogo-datos="@Model.CarreraSeleccionada,@curso.CursoID"
                                   dialogo-mensaje="¿Está seguro que desea eliminar el curso @curso.NombreDelCurso?"
                                   data-bs-toggle="modal" data-bs-target="#dialogoEliminarCurso">Remover</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @using (Html.BeginForm("AgregarCurso", "Carreras", new { }, FormMethod.Post, new { @name = "agregarCurso" }))
        {

            <div class="modal fade" id="agregarCurso" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="exampleModalLabel">Nuevo Curso</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @{
                                string carreraSeleccionada = Model.CarreraSeleccionada;
                                <input type="hidden" name="CarreraSeleccionada" value="@carreraSeleccionada" />
                            }

                            <div class="mb-3">
                                @Html.LabelFor(model => model.NuevoCurso.NombreDelCurso, "Nombre del curso")
                                @Html.TextBoxFor(model => model.NuevoCurso.NombreDelCurso, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NuevoCurso.NombreDelCurso)
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.NuevoCurso.Escuela, new { })
                                @Html.TextBoxFor(model => model.NuevoCurso.Escuela, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NuevoCurso.Escuela)
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.NuevoCurso.Precio, "Precio")
                                @Html.TextBoxFor(model => model.NuevoCurso.Precio, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NuevoCurso.Precio)
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.NuevoCurso.Descripcion, "Descripcion")
                                @Html.TextAreaFor(model => model.NuevoCurso.Descripcion, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NuevoCurso.Descripcion)
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <input type="submit" class="btn btn-primary" value="Agregar" />
                        </div>
                        <script>
                            document.addEventListener('DOMContentLoaded', () => {

                                var formularioCurso = document.agregarCurso;
                                formularioCurso.addEventListener("submit", (e) => {

                                    var formularioCurso = document.forms.agregarCurso;

                                    var nombreCurso = formularioCurso["NuevoCurso.NombreDelCurso"];
                                    var escuela = formularioCurso["NuevoCurso.Escuela"];
                                    var precio = formularioCurso["NuevoCurso.Precio"];

                                    var nombreCursoValido = validarCampoNoVacio(nombreCurso, "Nombre del curso es requerido");
                                    var escuelaValido = validarCampoNoVacio(escuela, "Escuela del curso es requerida");
                                    var precioValido = validarCampoNoVacio(precio, "Precio del curso es requerido");

                                    if (!(nombreCursoValido && escuelaValido && precioValido)) {
                                        e.preventDefault();
                                    }
                                })
                            }, false);

                        </script>
                    </div>
                </div>
            </div>

        }


        @using (Html.BeginForm("EliminarCurso", "Carreras", new { }, FormMethod.Post, new { @name = "eliminarCursoForm" }))
        {
            <input type="hidden" name="CarreraSeleccionada" />
            <input type="hidden" name="CursoSeleccionado" />
        }

        @Html.Partial("_Dialogo", new DialogoModelo() { Id = "dialogoEliminarCurso", ClaseBoton = "btn btn-danger", TextoBotonAceptar = "Remover" })
        <script type="text/javascript">
            document.addEventListener('DOMContentLoaded', () => {
                dialogo("dialogoEliminarCurso", (dato) => {
                    var formulario = document.forms.eliminarCursoForm
                    var carreraCurso = dato.split(",");

                    formulario.CarreraSeleccionada.value = carreraCurso[0];
                    formulario.CursoSeleccionado.value = carreraCurso[1];

                    formulario.submit();
                });
            }, false);
        </script>
    </div>

</div>

@Scripts.Render("~/bundles/carreras")
@Scripts.Render("~/bundles/validacionFormularios")